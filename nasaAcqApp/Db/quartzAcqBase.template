
# suppliment nasaAcqSup.subtitutions

# breakout ACQ:status word
record(bi, "$(P)ACQ:clk") {
    field(DESC, "Acq. clk unlock from PPS")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)ACQ:status CP MS")
    field(MASK, "1")
    field(ZNAM, "Lock")
    field(ONAM, "Unlock")
    field(OSV , "MAJOR")
}
record(bi, "$(P)ACQ:tod") {
    field(DESC, "Time of day invalid")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)ACQ:status CP MS")
    field(MASK, "2")
    field(ZNAM, "Invalid")
    field(ONAM, "Valid")
    field(OSV , "MAJOR")
}
record(bi, "$(P)ACQ:pktoflw") {
    field(DESC, "Pkt Bldr oflow")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)ACQ:status CP MS")
    field(MASK, "4")
    field(ZNAM, "Normal")
    field(ONAM, "OFlow")
    field(OSV , "MAJOR")
}
record(bi, "$(P)ACQ:adcoflw") {
    field(DESC, "ADC oflow")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)ACQ:status CP MS")
    field(MASK, "8")
    field(ZNAM, "Normal")
    field(ONAM, "OFlow")
    field(OSV , "MAJOR")
}
record(bi, "$(P)ACQ:loadcal") {
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)ACQ:status CP MS")
    field(MASK, "0x10000000")
    field(ZNAM, "Idle")
    field(ONAM, "Run")
}
record(bi, "$(P)ACQ:sub") {
    field(DESC, "Fast data subscriber")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)ACQ:status CP MS")
    field(MASK, "0x20000000")
    field(ZNAM, "No")
    field(ONAM, "Yes")
    field(ZSV , "MAJOR")
}
record(bi, "$(P)ACQ:running") {
    field(DESC, "Sampling")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)ACQ:status CP MS")
    field(MASK, "0x40000000")
    field(ZNAM, "Idle")
    field(ONAM, "Run")
}
record(bi, "$(P)ACQ:request") {
    field(DESC, "Request sampling")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)ACQ:status CP MS")
    field(MASK, "0x80000000")
    field(ZNAM, "Idle")
    field(ONAM, "Request")
}

# breakout clkPLL word
record(bi, "$(P)ACQ:loop") {
    field(DESC, "VXCO loop")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)ACQ:clkPLL CP MS")
    field(MASK, "0x20000000")
    field(ZNAM, "Stop")
    field(ONAM, "Run")
    field(ZSV, "MAJOR")
}
record(bi, "$(P)ACQ:ppsTog") {
    field(DESC, "PPS toggle")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)ACQ:clkPLL CP MS")
    field(MASK, "0x40000000") # toggles state each time PPS arrives
    field(ZNAM, "0")
    field(ONAM, "1")
}
record(bi, "$(P)ACQ:ppslck") {
    field(DESC, "Request sampling")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)ACQ:clkPLL CP MS")
    field(MASK, "0x80000000")
    field(ZNAM, "Unlock")
    field(ONAM, "Lock")
    field(ZSV , "MAJOR")
}
record(calc, "$(P)ACQ:ppsdiff") {
    field(INPA, "$(P)ACQ:clkPLL CP MS")
    # mask out field
    field(INPB, "0xffffff") # mask
    field(INPC, "0")        # offset
    field(INPD, "") # scratch, unsigned 16
    field(INPF, "0x800000") # sign bit
    field(CALC, "D:=((A&B)>>C);D&F?-(D XOR B)-1:D")
    field(EGU , "tick")
    field(ADEL, "0")
}

record(bi, "$(P)DRDY:align") {
    field(DESC, "DRDY aligned")
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)DRDY:status CP MS")
    field(MASK, "0x80000000")
    field(ZNAM, "Aligned")
    field(ONAM, "Skew")
    field(OSV , "MAJOR")
}
# number of acquisition clock ticks (8 ns per tick) between event receiver PPS event and ADC DRDY rising edge.
record(calc, "$(P)DRDY:pps") {
    field(DESC, "PPS -> DRDY itvl")
    field(INPA, "$(P)DRDY:status CP MS")
    field(INPB, "0xfffff")
    field(INPC, "0")
    field(INPD, "8") # raw units are ticks of 125MHz
    field(CALC, "((A&B)>>C)*D")
    field(EGU , "ns")
    field(HIGH, "64")
    field(HSV , "MAJOR")
    field(ADEL, "0")
}

# breakout PPS:status  (Only meaningful on EVG node)
record(bi, "$(P)PPS:fmc") {
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)PPS:status CP MS")
    field(MASK, "0x10000000")
    field(ZNAM, "No FMC")
    field(ONAM, "FMC")
}
record(bi, "$(P)PPS:gps") {
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)PPS:status CP MS")
    field(MASK, "0x20000000")
    field(ZNAM, "No GPS")
    field(ONAM, "GPS")
}
record(mbbi, "$(P)PPS:src") {
    field(DTYP, "Raw Soft Channel")
    field(INP , "$(P)PPS:status CP MS")
    field(NOBT, "4")
    field(SHFT, "28")
    field(MASK, "0xb") # 0b1011
    field(ZRVL, "0x0")
    field(ONVL, "0x9") # 0b1001
    field(TWVL, "0xa") # 0b1010
    field(ZRST, "No PPS")
    field(ONST, "FMC")
    field(TWST, "PMOD")
    field(UNSV, "MAJOR")
}
record(calc, "$(P)PPS:jtr") {
    field(INPA, "$(P)PPS:status CP MS")
    field(INPB, "0xffff")
    field(INPC, "0")
    field(INPD, "1")
    field(CALC, "((A&B)>>C)*D")
    field(EGU , "ns")
    field(ADEL, "0")
}



# setup and control

record(longout, "$(P)SA:BufLim") {
    field(DTYP, "PSCUDPFast shortLimit")
    field(OUT , "@$(NAME)")
    field(VAL , "1") # will automatically grow to fill channel aai NELM
    field(PINI, "YES")
    info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)SA:WinSt") {
    field(DESC, "Window start time")
    field(VAL, "0")
    field(EGU, "s")
    info(autosaveFields_pass0, "VAL")
}

record(ao, "$(P)SA:WinSz") {
    field(DESC, "Window length")
    field(VAL, "100")
    field(EGU, "s")
    info(autosaveFields_pass0, "VAL")
}

record(bo, "$(P)SA:AutClr") {
    field(ZNAM, "Manual")
    field(ONAM, "Auto")
    field(VAL , "1")
    field(FLNK, "$(P)SA:AutClr_") # attempt to clear on change
    info(autosaveFields_pass0, "VAL")
}

# timebase, assume identical for all.

record(calc, "$(P)SA:Pr") {
    field(DESC, "Sample period")
    field(INPA, "$(P)SA:Pr")
    field(INPA, "$(EVG)ACQ:rate.RVAL CP") # decimation factor
    field(CALC, "1/A")
    field(EGU , "s")
    field(PREC, "6")
}

record(aSub, "$(P)SA:T_") {
    field(SNAM, "wf_timebase")
    field(FTA , "ULONG")
    field(FTB , "DOUBLE")
    field(FTVA ,"DOUBLE")
    field(INPA, "$(P)SA:Ch01.NELM CP")
    field(INPB, "$(P)SA:Pr CP")
    field(OUTA, "$(P)SA:T PP MS")
    field(NOVA, "$(NELM)")
}

record(aai, "$(P)SA:T") {
    field(FTVL, "DOUBLE")
    field(NELM, "$(NELM)")
}

# begin "short" readout chain

# notification when "short" buffer fills
record(bi, "$(P)SA:BufFul") {
    field(DTYP, "PSCUDPFast shortFull")
    field(INP , "@$(NAME)")
    field(SCAN, "I/O Intr")
    field(ZNAM, "Not full")
    field(ONAM, "Full")
    field(OSV , "MINOR")
    field(FLNK, "$(P)SA:BufFul_")
    field(TPRO, "$(TPRO=)")
}

# trigger channel readout when Not full -> Full
record(calcout, "$(P)SA:BufFul_") {
    field(INPA, "$(P)SA:BufFul")
    field(CALC, "A")
    field(OOPT, "When Non-zero")
    field(OUT , "$(P)SA:Ch01_.PROC") # --> quartzAcqChan.template
}

# /-- back after last channel processed
# |
# V

record(bo, "$(P)SA:AutClr_") {
    field(SDIS, "$(P)SA:AutClr")
    field(DISV, "0")
    field(FLNK, "$(P)SA:BufClr")
}

# HACK: an "input" with side-effects.  Clears and reports previous size
record(longin, "$(P)SA:BufClr") {
    field(DTYP, "PSCUDPFast Clear Short")
    field(INP , "@$(NAME)")
}
