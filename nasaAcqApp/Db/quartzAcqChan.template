
# ASLO and AOFF are ADC count -> Volt calibration specific to a digitizer
record(ao, "$(P)SA:Ch$(N):ASLO") {
    # with Quartz 1.2 this will be roughly 1.62e-06 V/ADC
    # as opamp gain limits scaling of +-10V to ~70% of full scale 24-bit signed ADC
    field(VAL, "1.0")
    field(PREC, "6")
    field(EGU , "V/ADC")
    info(autosaveFields_pass0, "VAL")
}
record(ao, "$(P)SA:Ch$(N):AOFF") {
    field(VAL, "0.0")
    field(PREC, "6")
    field(EGU , "V")
    info(autosaveFields_pass0, "VAL")
}
# ESLO and EOFF are V -> EGU scaling specific to currently connected signal
record(ao, "$(P)SA:Ch$(N):ESLO") {
    field(VAL, "1.0")
    field(PREC, "6")
    field(EGU , "EGU/V")
    info(autosaveFields_pass0, "VAL")
}
record(ao, "$(P)SA:Ch$(N):EOFF") {
    field(VAL, "0.0")
    field(PREC, "6")
    field(EGU , "EGU")
    info(autosaveFields_pass0, "VAL")
}
record(bo, "$(P)SA:Ch$(N):USE") {
    field(VAL, "1")
    field(ZNAM, "No")
    field(ONAM, "Yes")
    info(autosaveFields_pass0, "VAL")
}
# export to UFF58b ID Line 1
record(lso, "$(P)SA:Ch$(N):NAME") {
    field(DESC, "Canonical signal name")
    field(SIZV, "128")
    field(PINI, "YES")
    info(autosaveFields_pass1, "VAL")
}
# export to UFF58b ID Line 2
record(lso, "$(P)SA:Ch$(N):DESC") {
    field(DESC, "Friendly signal label")
    field(SIZV, "128")
    field(PINI, "YES")
    info(autosaveFields_pass1, "VAL")
}
# export to UFF58b ID Line 5
record(lso, "$(P)SA:Ch$(N):DESC5") {
    field(DESC, "Extra signal label")
    field(SIZV, "128")
    field(PINI, "YES")
    info(autosaveFields_pass1, "VAL")
}
# export to UFF58b Record 6, Field 6
record(longout, "$(P)SA:Ch$(N):RESPNODE") {
    info(autosaveFields_pass0, "VAL")
}
# export to UFF58b Record 6, Field 7
record(mbbo, "$(P)SA:Ch$(N):RESPDIR") {
    field(DTYP, "Raw Soft Channel")
    field(DESC, "Response Direction")
    field(ZRST, "Scalar")
    field(ONST, "+X Translation")
    field(TWST, "+Y Translation")
    field(THST, "+Z Translation")
    field(FRST, "-X Translation")
    field(FVST, "-Y Translation")
    field(SXST, "-Z Translation")
    field(SVST, "+X Rotation")
    field(EIST, "+Y Rotation")
    field(NIST, "+Z Rotation")
    field(TEST, "-X Rotation")
    field(ELST, "-Y Rotation")
    field(TVST, "-Z Rotation")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "-1")
    field(FVVL, "-2")
    field(SXVL, "-3")
    field(SVVL, "4")
    field(EIVL, "5")
    field(NIVL, "6")
    field(TEVL, "-4")
    field(ELVL, "-5")
    field(TVVL, "-6")
    field(UNSV, "INVALID")
    info(autosaveFields_pass0, "VAL")
}
# export to UFF58b Record 8, Field 1
record(mbbo, "$(P)SA:Ch$(N):SDTYP") {
    field(DTYP, "Raw Soft Channel")
    field(ZRST, "unknown")
    field(ONST, "general")
    field(TWST, "stress")
    field(THST, "strain")
    field(FRST, "temperature")
    field(FVST, "heat flux")
    field(SXST, "displacement")
    field(SVST, "reaction force")
    field(EIST, "velocity")
    field(NIST, "acceleration")
    field(TEST, "excitation force")
    field(ELST, "pressure")
    field(TVST, "mass")
    field(TTST, "time")
    field(FTST, "frequency")
    field(FFST, "rpm")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "5")
    field(FVVL, "6")
    field(SXVL, "8")
    field(SVVL, "9")
    field(EIVL, "11")
    field(NIVL, "12")
    field(TEVL, "13")
    field(ELVL, "15")
    field(TVVL, "16")
    field(TTVL, "17")
    field(FTVL, "18")
    field(FFVL, "19")
    # skip "order" / 20, out of states.  (what is this anyway?)
    field(UNSV, "INVALID")
}

record(stringout, "$(P)SA:Ch$(N):EGU") {
    field(DESC, "Current signal units")
    info(autosaveFields_pass0, "VAL")
}

# note about most recent calibration run
record(ao, "$(P)SA:Ch$(N):TCAL") {
    field(PINI, "YES")
    # out of bounds invalid...  (prevents -1, which would break SDIS logic below)
    field(HIHI, "0xffffffff")
    field(LOLO, "-1")
    field(HHSV, "INVALID")
    field(LLSV, "INVALID")
    field(IVOA, "Set output to IVOV")
    field(IVOV, "0")
    # 0 for out of cal
    field(LOW , "0")
    field(LSV , "MAJOR")
    field(FLNK, "$(P)SA:Ch$(N):LASTCAL_")
    info(autosaveFields_pass0, "VAL")
}
record(ai, "$(P)SA:Ch$(N):LASTCAL_") {
    field(DTYP, "Copy VAL to TIME")
    field(TSE , "-2")
    field(INP , "$(P)SA:Ch$(N):TCAL")
    field(FLNK, "$(P)SA:Ch$(N):LASTCAL")
}
record(stringin, "$(P)SA:Ch$(N):LASTCAL") {
    field(SDIS, "$(P)SA:Ch$(N):TCAL MS")
    field(DISV, "-1")
    field(DESC, "$(NAME) (human-readable)")
    field(DTYP, "Soft Timestamp")
    field(INP,  "@%Y-%m-%d %H:%M:%S")
    field(TSEL, "$(P)SA:Ch$(N):LASTCAL_.TIME")
}

# V = ASLO*ADC + AOFF
# EU= ESLO*V   + EOFF
#
# EU= ESLO*(ASLO*ADC + AOFF) + EOFF
# EU= (ESLO*ASLO)*ADC + (ESLO*AOFF + EOFF)
record(calcout, "$(P)SA:Ch$(N):SLO") {
    field(PREC, "6")
    field(EGU , "EGU/ADC")
    field(INPA, "$(P)SA:Ch$(N):ASLO CP MS")
    field(INPB, "$(P)SA:Ch$(N):ESLO CP MS")
    field(CALC, "A*B")
    field(OUT , "$(P)SA:Ch$(N):S_.B PP MS")
}
record(calcout, "$(P)SA:Ch$(N):OFF") {
    field(PREC, "6")
    field(EGU , "EGU")
    field(INPA, "$(P)SA:Ch$(N):AOFF CP MS")
    field(INPB, "$(P)SA:Ch$(N):ESLO CP MS")
    field(INPC, "$(P)SA:Ch$(N):EOFF CP MS")
    field(CALC, "A*B + C")
    field(OUT , "$(P)SA:Ch$(N):S_.C PP MS")
}

# project ADC range into EGU
record(calc, "$(P)SA:Ch$(N):MAX") {
    field(INPA, "$(P)SA:Ch$(N):ESLO CP MS")
    field(INPB, "$(P)SA:Ch$(N):EOFF CP MS")
    field(INPC, "10")
    field(CALC, "A*C+B")
    field(EGU , "EGU")
    field(PREC, "6")
}
record(calc, "$(P)SA:Ch$(N):MIN") {
    field(INPA, "$(P)SA:Ch$(N):ESLO CP MS")
    field(INPB, "$(P)SA:Ch$(N):EOFF CP MS")
    field(INPC, "-10")
    field(CALC, "A*C+B")
    field(EGU , "EGU")
    field(PREC, "6")
}

# /-- from quartzAcq (Chan0) or previous channel
# |
# V

record(aai, "$(P)SA:Ch$(N)_") {
    field(DTYP, "PSCUDPFast Get Short I24 packed")
    field(INP , "@$(NAME) 20034 $(OFF=48) 96")
    field(FTVL, "LONG")
    field(NELM, "$(NELM)")
    field(TSEL, "$(TSEL=0)")
    field(FLNK, "$(P)SA:Ch$(N):S_")
    info(Q:group, {
        "$(P)SA:V": {
            "value.Ch$(N)": {+type:"plain", "+channel":"VAL"}
        }
    })
}

record(aSub, "$(P)SA:Ch$(N):S_") {
    field(SNAM, "wf_scale")
    field(FTA , "LONG")
    field(FTB , "DOUBLE")
    field(FTC , "DOUBLE")
    field(FTVA, "DOUBLE")
    field(NOA , "$(NELM)")
    field(NOVA, "$(NELM)")
    field(INPA, "$(P)SA:Ch$(N)_ NPP MS")
    field(INPB, "1.0") # overwritten above
    field(INPC, "0.0") # overwritten above
    field(OUTA, "$(P)SA:Ch$(N) PP MS")
    field(FLNK, "$(P)SA:Ch$(N):Stats-Calc_")
}

record(aai, "$(P)SA:Ch$(N)") {
    field(FTVL, "DOUBLE")
    field(NELM, "$(NELM)")
    field(TSEL, "$(TSEL=0)")
}

record(aSub, "$(P)SA:Ch$(N):Stats-Calc_") {
  field(SCAN, "$(SCAN=)")
  field(SNAM, "wf_stats")
  field(FTA , "DOUBLE")
  field(FTB , "DOUBLE")
  field(FTC , "DOUBLE")
  field(FTD , "DOUBLE")
  field(FTVA ,"DOUBLE")
  field(FTVB ,"DOUBLE")
  field(FTVC ,"DOUBLE")
  field(FTVD ,"DOUBLE")
  field(FTVE ,"ULONG")
  field(NOA , "$(NELM)")
  field(NOB , "$(NELM)")
  field(INPA, "$(P)SA:Ch$(N) NPP MS")
  field(INPB, "$(P)SA:T")
  field(INPC, "$(P)SA:WinSt") # window start
  field(INPD, "$(P)SA:WinSz") # window width
  field(OUTA, "$(P)SA:Ch$(N):Mean-I PP MS")
  field(OUTB, "$(P)SA:Ch$(N):Std-I PP MS")
  field(OUTC, "$(P)SA:Ch$(N):Min-I PP MS")
  field(OUTD, "$(P)SA:Ch$(N):Max-I PP MS")
  field(OUTE, "$(P)SA:Ch$(N):Cnt-I PP MS")
  field(TSEL, "$(P)SA:Ch$(N).TIME")
  field(FLNK, "$(P)SA:Ch$(N):FEn_")
}

record(fanout, "$(P)SA:Ch$(N):FEn_") {
  field(LNK0, "$(FLNK=)") # --> next channel or stats for Chan0
  field(LNK1, "$(P)SA:Ch$(N):FFT:In-SP") # maybe start FFT calc
}

record(ai, "$(P)SA:Ch$(N):Mean-I") {
  field(PREC, "$(PREC=2)")
  field(TSEL, "$(P)SA:Ch$(N):Stats-Calc_.TIME")
}
record(ai, "$(P)SA:Ch$(N):Std-I") {
  field(PREC, "$(PREC=2)")
  field(TSEL, "$(P)SA:Ch$(N):Stats-Calc_.TIME")
}
record(ai, "$(P)SA:Ch$(N):Min-I") {
  field(PREC, "$(PREC=2)")
  field(TSEL, "$(P)SA:Ch$(N):Stats-Calc_.TIME")
}
record(ai, "$(P)SA:Ch$(N):Max-I") {
  field(PREC, "$(PREC=2)")
  field(TSEL, "$(P)SA:Ch$(N):Stats-Calc_.TIME")
}
record(longin, "$(P)SA:Ch$(N):Cnt-I") {
  field(TSEL, "$(P)SA:Ch$(N):Stats-Calc_.TIME")
}

# override psc-psd.db

record("*", "$(P)SA:Ch$(N):FFT:F:Samp-SP") {
  field(DOL, "$(EVG)ACQ:rate.RVAL CP")
  field(OMSL, "closed_loop")
}

record("*", "$(P)SA:Ch$(N):FFT:Wind-Sel") {
  field(RVAL , "1")
}

record("*", "$(P)SA:Ch$(N):FFT:Run-Sel") {
  field(VAL , "1")
}
